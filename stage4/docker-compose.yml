version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: animize_eat_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-mydb}
      - POSTGRES_USER=${DB_USER:-myuser}
      - POSTGRES_PASSWORD=${DB_PW:-mypassword}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-myuser}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: animize_eat_backend
    volumes:
      - ./backend:/app
      - media_data:/app/media
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME:-mydb}
      - DB_USER=${DB_USER:-myuser}
      - DB_PW=${DB_PW:-mypassword}
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # React Frontend
  frontend:
    build:
      context: ./frontend/animize_eat
      dockerfile: Dockerfile
    container_name: animize_eat_frontend
    depends_on:
      - backend
    ports:
      - "3000:80"

  # Nginx Reverse Proxy
  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    container_name: animize_eat_proxy
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  media_data:
