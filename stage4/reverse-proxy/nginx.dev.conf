upstream backend {
    server backend:8000; # internal port (port open in the docker network for interanl communication)
}

upstream frontend {
    server frontend:5173;
}

server {
	listen 80;
	server_name reverse-proxy;
	client_max_body_size 10M; # ets the maximum allowed size for the body of client requests to 10 megabytes.

	# Proxy frontend
	location / {
		proxy_pass http://frontend; # proxies requests to the upstream group frontend
		proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
	}

	# Proxy backend API
	location /api {
		proxy_pass http://backend; # proxies requests to the upstream group backend
		proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
	}
}

# - proxy_set_header Host $host; # Passes the original Host header from
# the client to the backend. This helps the backend know which domain
# was requested.
# - proxy_set_header X-Real-IP $remote_addr; # Passes the real client
#   IP address to the backend (otherwise, the backend only sees the
#   proxy’s IP).
# - proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Adds
#   the client’s IP to the X-Forwarded-For header, which is a standard
#   way to track the original IP through proxies.
# - proxy_set_header X-Forwarded-Proto $scheme; # Tells the backend
# whether the original request was HTTP or HTTPS.
